name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y g++ libegl1-mesa-dev libgles2-mesa-dev

    - name: Compile main.cpp
      run: g++ -shared -fPIC -o libmymodule.so src/main.cpp -ldl -lEGL -lGLESv2

    - name: Archive shared library
      uses: actions/upload-artifact@v2
      with:
        name: libmymodule
        path: libmymodule.so

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: List contents for debugging
      run: ls -al

    - name: Download shared library
      uses: actions/download-artifact@v2
      with:
        name: libmymodule
        path: ./libmymodule.so  # Ensure correct path to save the downloaded file

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: Release v1.0.${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./libmymodule.so
        asset_name: libmymodule.so
        asset_content_type: application/octet-stream
